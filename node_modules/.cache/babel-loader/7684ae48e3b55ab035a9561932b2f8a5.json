{"ast":null,"code":"var _jsxFileName = \"/Users/nikitasharma/Desktop/todo-list/src/components/todo-list/todo.js\";\nimport React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Modal from 'react-bootstrap/Modal';\nimport './todo.scss';\n\nclass ToDo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: \"\",\n      description: \"\",\n      status: \"\",\n      show: false,\n      tasks: []\n    };\n\n    this.refreshTasks = () => {\n      const url = 'https://engine-staging.viame.ae/assessment/user/list';\n      fetch(url, {\n        method: 'GET',\n        headers: {\n          'x-access-token': 'ca7fe1db6188a235dabc9c1457d82e636b11a543'\n        }\n      }).then(res => res.json()).catch(error => console.error('Error:', error)).then(response => {\n        console.log('Success:', response);\n        this.setState({\n          tasks: response\n        });\n      });\n    };\n\n    this.componentDidMount = () => {\n      this.refreshTasks();\n    };\n\n    this.handleClose = () => this.setState({\n      show: false\n    });\n\n    this.handleShow = () => this.setState({\n      show: true\n    });\n\n    this.handleModalChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.addNewTask = () => {\n      const url = 'https://engine-staging.viame.ae/assessment/user/task';\n      const data = {\n        todolist: {\n          title: this.state.title,\n          description: this.state.description,\n          status: 1\n        }\n      };\n      fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n          'Content-Type': 'application/json',\n          'x-access-token': 'ca7fe1db6188a235dabc9c1457d82e636b11a543'\n        }\n      }).then(res => res.json()).catch(error => console.error('Error:', error)).then(response => {\n        console.log('Success:', response);\n        this.handleClose();\n      });\n    };\n\n    this.deleteTask = task_id => {\n      console.log(\"id\", task_id);\n      const url = 'http://engine-staging.viame.ae/assessment/user/task/' + task_id;\n      fetch(url, {\n        method: 'DELETE',\n        headers: {\n          'x-access-token': 'ca7fe1db6188a235dabc9c1457d82e636b11a543'\n        }\n      }).then(res => {\n        res.json();\n        this.refreshTasks();\n      }).catch(error => console.error('Error:', error)).then(response => {\n        console.log('Success:', response);\n        this.handleClose();\n      });\n    };\n\n    this.logOut = () => {\n      localStorage.removeItem(\"token\");\n      console.log(\"t\", this.props); // this.props.userLoggedIn();\n    };\n  }\n\n  renderStatus(param) {\n    switch (param) {\n      case 1:\n        return \"Created\";\n\n      case 2:\n        return \"Working\";\n\n      case 3:\n        return \"Finished\";\n\n      case 4:\n        return \"Cancelled\";\n\n      default:\n        return \"Created\";\n    }\n  }\n\n  render() {\n    const tasks = this.state.tasks;\n    const show = this.state.show;\n    return React.createElement(Container, {\n      className: \"todoList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Button, {\n      id: \"logOut\",\n      variant: \"secondary\",\n      type: \"button\",\n      onClick: this.logOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Logout\"), React.createElement(Button, {\n      id: \"newTask\",\n      variant: \"primary\",\n      onClick: this.handleShow,\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \" + New Task\"))), React.createElement(Row, {\n      className: \"todoBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Table, {\n      responsive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Task\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Status\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Action\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, tasks.map(task => React.createElement(\"tr\", {\n      key: task._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, task.title), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, task.description), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, this.renderStatus(task.status)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Actions \"), React.createElement(Dropdown.Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Dropdown.Item, {\n      href: \"#/action-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Finished\"), React.createElement(Dropdown.Item, {\n      href: \"#/action-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Working\"), React.createElement(Dropdown.Item, {\n      href: \"#/action-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Cancel Task\"), React.createElement(Dropdown.Item, {\n      onClick: this.deleteTask(task._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Delete\"))))))))), React.createElement(Modal, {\n      show: show,\n      onHide: this.handleClose,\n      className: \"newModal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Add New Task\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Form, {\n      className: \"text-center newTaskForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"Enter task title\",\n      onChange: this.handleModalChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Please enter title for the task\"))), React.createElement(Form.Group, {\n      controlId: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"textarea\",\n      type: \"text\",\n      name: \"description\",\n      placeholder: \"Enter task description\",\n      onChange: this.handleModalChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Please enter a valid description for the task\"))))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Close\"), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.addNewTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Add Task\"))));\n  }\n\n}\n\nexport default ToDo;","map":{"version":3,"sources":["/Users/nikitasharma/Desktop/todo-list/src/components/todo-list/todo.js"],"names":["React","Component","Table","Button","Dropdown","Container","Row","Col","Form","InputGroup","Modal","ToDo","state","title","description","status","show","tasks","refreshTasks","url","fetch","method","headers","then","res","json","catch","error","console","response","log","setState","componentDidMount","handleClose","handleShow","handleModalChange","event","target","name","value","addNewTask","data","todolist","body","JSON","stringify","deleteTask","task_id","logOut","localStorage","removeItem","props","renderStatus","param","render","map","task","_id"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Modal from 'react-bootstrap/Modal';\nimport './todo.scss';\n\nclass ToDo extends Component {\n    state = {\n        title: \"\",\n        description: \"\",\n        status: \"\",\n        show : false,\n        tasks: []\n    }\n\n    refreshTasks = () => {\n        const url = 'https://engine-staging.viame.ae/assessment/user/list';\n        fetch(url, { \n            method: 'GET',\n            headers:{ 'x-access-token': 'ca7fe1db6188a235dabc9c1457d82e636b11a543' } \n        }).then(res => res.json()\n        ).catch(error => console.error('Error:', error)\n        ).then(response => {\n            console.log('Success:', response);\n            this.setState({tasks: response});\n        });\n    }\n\n    componentDidMount = () => {\n        this.refreshTasks();\n    }\n\n    renderStatus(param) {\n        switch(param) {\n          case 1:\n            return \"Created\";\n          case 2:\n            return \"Working\";\n          case 3:\n            return \"Finished\";\n          case 4:\n            return \"Cancelled\";\n          default:\n            return \"Created\";\n        }\n    }\n\n    handleClose = () => this.setState({show: false});\n    handleShow = () => this.setState({show: true});\n    handleModalChange = event => {this.setState({ [event.target.name]:event.target.value })}\n\n    addNewTask = () => {\n        const url = 'https://engine-staging.viame.ae/assessment/user/task';\n        const data = {todolist: { title: this.state.title, description: this.state.description, status:1 }}\n        fetch(url, { \n            method: 'POST',\n            body: JSON.stringify(data),\n            headers:{ 'Content-Type': 'application/json', 'x-access-token': 'ca7fe1db6188a235dabc9c1457d82e636b11a543' } \n        }).then(res => res.json()\n        ).catch(error => console.error('Error:', error)\n        ).then(response => {\n            console.log('Success:', response);\n            this.handleClose();\n        });\n    }\n\n    deleteTask = (task_id) => {\n        console.log(\"id\", task_id);\n        const url = 'http://engine-staging.viame.ae/assessment/user/task/'+ task_id;\n        fetch(url, { \n            method: 'DELETE',\n            headers:{'x-access-token': 'ca7fe1db6188a235dabc9c1457d82e636b11a543'} \n        }).then(res => {\n            res.json();\n            this.refreshTasks();\n        }).catch(error => console.error('Error:', error)\n        ).then(response => {\n            console.log('Success:', response);\n            this.handleClose();\n        });\n    }\n\n    logOut = () => {\n        localStorage.removeItem(\"token\");\n        console.log(\"t\", this.props);\n        // this.props.userLoggedIn();\n    }\n\n    render() {\n        const tasks = this.state.tasks;\n        const show = this.state.show;\n        return (\n            <Container className=\"todoList\">\n                <Row>\n                    <Col className=\"text-right\">\n                        <Button id=\"logOut\" variant=\"secondary\" type=\"button\" onClick={this.logOut}>Logout</Button>\n                        <Button id=\"newTask\" variant=\"primary\" onClick={this.handleShow} type=\"button\"> + New Task</Button>  \n                    </Col>\n                </Row>\n                <Row className=\"todoBox\">\n                    <Table responsive>\n                        <thead>\n                            <tr>\n                                <th>Task</th>\n                                <th>Description</th>\n                                <th>Status</th>\n                                <th>Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {tasks.map(task => (\n                                <tr key={task._id}>\n                                    <td>{task.title}</td>\n                                    <td>{task.description}</td>\n                                    <td>{this.renderStatus(task.status)}</td>\n                                    <td>\n                                        <Dropdown>\n                                            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">Actions </Dropdown.Toggle>\n                                            <Dropdown.Menu>\n                                                <Dropdown.Item href=\"#/action-2\">Finished</Dropdown.Item>\n                                                <Dropdown.Item href=\"#/action-2\">Working</Dropdown.Item>\n                                                <Dropdown.Item href=\"#/action-3\">Cancel Task</Dropdown.Item>\n                                                <Dropdown.Item onClick={this.deleteTask(task._id)}>Delete</Dropdown.Item>\n                                            </Dropdown.Menu>\n                                        </Dropdown>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                </Row>\n                <Modal show={show} onHide={this.handleClose} className=\"newModal\">\n                    <Modal.Header closeButton>\n                        <Modal.Title>Add New Task</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form className=\"text-center newTaskForm\">\n                            <Form.Group controlId=\"title\">\n                                <InputGroup>\n                                    <Form.Control type=\"text\" name=\"title\" placeholder=\"Enter task title\" onChange={this.handleModalChange} required />\n                                    <Form.Control.Feedback type=\"invalid\">Please enter title for the task</Form.Control.Feedback>\n                                </InputGroup>\n                            </Form.Group>\n                            <Form.Group controlId=\"description\">\n                                <InputGroup>\n                                    <Form.Control as=\"textarea\" type=\"text\" name=\"description\" placeholder=\"Enter task description\" onChange={this.handleModalChange} />\n                                    <Form.Control.Feedback type=\"invalid\">Please enter a valid description for the task</Form.Control.Feedback>\n                                </InputGroup>\n                            </Form.Group>\n                        </Form>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.handleClose}>Close</Button>\n                        <Button variant=\"primary\" onClick={this.addNewTask}>Add Task</Button>\n                    </Modal.Footer>\n                </Modal>\n            </Container>\n        )\n    }\n}\n\nexport default ToDo;\n\n"]},"metadata":{},"sourceType":"module"}
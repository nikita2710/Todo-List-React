{"ast":null,"code":"var _jsxFileName = \"/Users/nikitasharma/Desktop/Todo-List-React/src/components/home/login.js\";\nimport React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport { Link, Redirect } from 'react-router-dom';\nimport './home.scss';\n\nclass login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      loginSuccess: false\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.submitLoginForm = event => {\n      event.preventDefault();\n      const url = 'https://engine-staging.viame.ae/assessment/login';\n      const data = {\n        users: {\n          email: this.state.email,\n          password: this.state.password\n        }\n      };\n      this.setState({\n        submitting: false\n      });\n      fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => res.json()).catch(error => console.error('Error:', error)).then(resp => {\n        if (resp.token) {\n          localStorage.setItem(\"token\", resp.token);\n          this.loginSuccess = true;\n          this.props.userLoggedIn();\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    localStorage.removeItem(\"token\");\n  }\n\n  render() {\n    let enabled = this.state.email.length > 0 && this.state.password.length > 0;\n\n    if (this.loginSuccess) {\n      return React.createElement(Redirect, {\n        to: \"/todolist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Form, {\n      onSubmit: this.submitLoginForm,\n      className: \"text-center loginForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"EmailInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(InputGroup.Prepend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(InputGroup.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-envelope\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }))), React.createElement(Form.Control, {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Enter your Email ID\",\n      \"aria-describedby\": \"inputGroupPrepend\",\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Please enter your email address.\"))), React.createElement(Form.Group, {\n      controlId: \"PwdInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(InputGroup.Prepend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(InputGroup.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-lock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }))), React.createElement(Form.Control, {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Enter your Password\",\n      \"aria-describedby\": \"inputGroupPrepend\",\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Please enter your password.\"))), React.createElement(Button, {\n      className: \"submitBtn\",\n      variant: \"primary\",\n      type: \"submit\",\n      disabled: !enabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(Link, {\n      className: \"redirectBtn\",\n      onClick: this.props.changeForm,\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Don't have an account? Register\"));\n  }\n\n}\n\nexport default login;","map":{"version":3,"sources":["/Users/nikitasharma/Desktop/Todo-List-React/src/components/home/login.js"],"names":["React","Component","Form","InputGroup","Button","Link","Redirect","login","state","email","password","loginSuccess","handleChange","event","setState","target","name","value","submitLoginForm","preventDefault","url","data","users","submitting","fetch","method","body","JSON","stringify","headers","then","res","json","catch","error","console","resp","token","localStorage","setItem","props","userLoggedIn","componentDidMount","removeItem","render","enabled","length","changeForm"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport {Link, Redirect} from 'react-router-dom';\nimport './home.scss';\n\nclass login extends Component {\n    state = {\n        email: \"\",\n        password: \"\",\n        loginSuccess: false\n    }\n    \n    handleChange = event => {\n        this.setState({ [event.target.name]:event.target.value })\n    }\n\n    componentDidMount(){\n        localStorage.removeItem(\"token\");\n    }\n\n    submitLoginForm = (event) => {\n        event.preventDefault();\n\n        const url = 'https://engine-staging.viame.ae/assessment/login';\n        const data = {users: { email: this.state.email, password: this.state.password }}\n        this.setState({submitting: false});\n        fetch(url, { \n            method: 'POST',\n            body: JSON.stringify(data),\n            headers:{ 'Content-Type': 'application/json' } \n        }).then(res => res.json()\n        ).catch(error => console.error('Error:', error)\n        ).then(resp => {\n            if (resp.token) {\n                localStorage.setItem(\"token\", resp.token);\n                this.loginSuccess = true;\n                this.props.userLoggedIn();\n            }\n        }\n        ); \n    }\n\n    render() {\n        let enabled = this.state.email.length > 0 && this.state.password.length > 0;\n        if(this.loginSuccess) {\n            return (\n            <Redirect to=\"/todolist\" />);\n        }\n        return (\n            <Form onSubmit={this.submitLoginForm} className=\"text-center loginForm\">\n                <Form.Group controlId=\"EmailInput\">\n                    <InputGroup>\n                        <InputGroup.Prepend>\n                            <InputGroup.Text><i className=\"fa fa-envelope\"></i></InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter your Email ID\" aria-describedby=\"inputGroupPrepend\" onChange={this.handleChange} required />\n                        <Form.Control.Feedback type=\"invalid\">Please enter your email address.</Form.Control.Feedback>\n                    </InputGroup>\n                </Form.Group>\n                <Form.Group controlId=\"PwdInput\">\n                    <InputGroup>\n                        <InputGroup.Prepend>\n                            <InputGroup.Text><i className=\"fa fa-lock\"></i></InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <Form.Control type=\"password\" name=\"password\" placeholder=\"Enter your Password\" aria-describedby=\"inputGroupPrepend\" onChange={this.handleChange} required />\n                        <Form.Control.Feedback type=\"invalid\">Please enter your password.</Form.Control.Feedback>\n                    </InputGroup>\n                </Form.Group>\n                <Button className=\"submitBtn\" variant=\"primary\" type=\"submit\" disabled={!enabled}>Submit</Button>\n                <Link className=\"redirectBtn\" onClick={this.props.changeForm} to=\"/\">Don't have an account? Register</Link>\n            </Form>\n        )\n    }\n}\n\nexport default login;"]},"metadata":{},"sourceType":"module"}
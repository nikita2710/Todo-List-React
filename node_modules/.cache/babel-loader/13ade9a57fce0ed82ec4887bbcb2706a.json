{"ast":null,"code":"var _jsxFileName = \"/Users/nikitasharma/Desktop/todo-list/src/containers/App.js\";\nimport React, { Component } from 'react'; // import logo from '../logo.svg';\n\nimport './App.scss';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport Login from '../components/home/login';\nimport Register from '../components/home/register'; // import Nav from './main';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Todo from '../components/todo-list/todo';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showLogin: true,\n      loggedIn: false,\n      tok: \"\"\n    };\n\n    this.componentDidMount = () => {\n      const tok = localStorage.getItem(\"token\");\n      console.log(\"tok\", tok);\n\n      if (tok != null) {\n        this.setState(() => ({\n          loggedIn: true\n        }));\n        this.loggedIn = true;\n        console.log(\"componentDidMount\", this.state);\n      } // if (window.performance) {\n      //   if (performance.navigation.type === 1) {\n      //     alert( \"This page is reloaded\" );\n      //   } else {\n      //     alert( \"This page is not reloaded\");\n      //   }\n      // }\n\n    };\n\n    this.logIn = () => {\n      // const tok = localStorage.getItem(\"token\");\n      // if(tok) {\n      //   this.setState(() => ({loggedIn: true}));\n      // } else {\n      //   this.setState(() => ({loggedIn: false}));\n      this.setState(prevState => ({\n        loggedIn: !prevState.loggedIn\n      })); // }\n    };\n\n    this.changeState = event => {\n      this.setState(prevState => ({\n        showLogin: !prevState.showLogin\n      }));\n    };\n  }\n\n  render() {\n    const showLogin = this.state.showLogin;\n    const loggedIn = this.state.loggedIn;\n    const tok = localStorage.getItem(\"token\");\n    let styles = {};\n\n    if (tok != null) {\n      styles = {\n        \"background\": \"linear-gradient(to right, #78ffd6, #007991)\"\n      };\n    } else {\n      styles = {};\n    }\n\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: styles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"LOGO\"))))), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: () => {\n        console.log(\"phla console\", loggedIn);\n        return React.createElement(Row, {\n          className: \"justify-content-md-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(Col, {\n          xs: 12,\n          md: 4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, showLogin && React.createElement(Login, {\n          userLoggedIn: this.logIn,\n          changeForm: this.changeState,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }), !showLogin && React.createElement(Register, {\n          changeForm: this.changeState,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        })));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/todolist\",\n      exact: true,\n      render: props => {\n        console.log(\"loggedIn\", loggedIn);\n\n        if (tok != null) {\n          return React.createElement(\"div\", {\n            className: \"todo-background\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }, React.createElement(Todo, Object.assign({}, props, {\n            userLoggedOut: this.logIn,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          })));\n        } else {\n          return React.createElement(Redirect, {\n            to: \"/\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nikitasharma/Desktop/todo-list/src/containers/App.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","Redirect","Login","Register","Container","Row","Col","Todo","App","state","showLogin","loggedIn","tok","componentDidMount","localStorage","getItem","console","log","setState","logIn","prevState","changeState","event","render","styles","props"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n// import logo from '../logo.svg';\nimport './App.scss';\nimport {BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\nimport Login from '../components/home/login';\nimport Register from '../components/home/register';\n// import Nav from './main';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Todo from '../components/todo-list/todo';\n\nclass App extends Component {\n\n  state = {\n    showLogin: true,\n    loggedIn: false,\n    tok: \"\"\n  }\n  \n  componentDidMount = () => {\n    const tok = localStorage.getItem(\"token\");\n    console.log(\"tok\", tok);\n    if(tok != null) {\n      this.setState(() => ({loggedIn: true}));\n      this.loggedIn = true;\n      console.log(\"componentDidMount\", this.state);\n    }\n    // if (window.performance) {\n    //   if (performance.navigation.type === 1) {\n    //     alert( \"This page is reloaded\" );\n    //   } else {\n    //     alert( \"This page is not reloaded\");\n    //   }\n    // }\n  }\n\n  logIn = () => {\n    // const tok = localStorage.getItem(\"token\");\n    // if(tok) {\n    //   this.setState(() => ({loggedIn: true}));\n    // } else {\n    //   this.setState(() => ({loggedIn: false}));\n      this.setState(prevState => ({loggedIn: !prevState.loggedIn}));\n    // }\n  }\n\n  changeState =(event) => {\n      this.setState(prevState => ({showLogin: !prevState.showLogin}));\n  }\n\n  render () {\n    const showLogin = this.state.showLogin;\n    const loggedIn = this.state.loggedIn;\n    const tok = localStorage.getItem(\"token\");\n    let styles = {};\n    if (tok != null) {\n      styles = {\"background\": \"linear-gradient(to right, #78ffd6, #007991)\"}\n    } else {\n      styles={};\n    }\n    return(\n      <Router>\n        <Container fluid={true}>\n          <Row style={styles}>\n            <Col>\n              <header className=\"text-center\">\n                {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n                <h1>LOGO</h1>\n              </header>\n            </Col>\n          </Row>\n          {/* <Row>\n              {(() => {\n                  if(loggedIn) {\n                    return <Redirect to=\"/todolist\" />;\n                  } else {\n                    return <Redirect to=\"/\" />;\n                  }\n              })()}\n            </Row> */}\n        </Container> \n        <Switch>\n            <Route path=\"/\" exact render={()=> {\n              console.log(\"phla console\", loggedIn);\n                return (\n                <Row className=\"justify-content-md-center\"><Col xs={12} md={4}>\n                {showLogin && <Login userLoggedIn={this.logIn} changeForm={this.changeState}></Login>}\n                {!showLogin && <Register changeForm={this.changeState}></Register>}</Col></Row>\n            )}} />\n            <Route path=\"/todolist\" exact render={(props) => {\n              console.log(\"loggedIn\", loggedIn);\n              if (tok != null) {\n                return (<div className=\"todo-background\">\n                { <Todo {...props}  userLoggedOut={this.logIn} />}</div>);\n              } else {\n                return (<Redirect to=\"/\" />);\n              }\n            }} />\n        </Switch>\n      </Router>\n    )\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}